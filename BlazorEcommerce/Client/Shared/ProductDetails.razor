@page "/product/{id:int}"
@inject IProductService ProductService;

@* antes estavamos usando ProductService pq estavamos pegando todos produtos e escolhendo apenas 1 *@
@* antes estavamos usando ProductService *@

@if (product == null)
{
    <span>@message</span>
}

else
 {
    <h3>Product Details</h3>
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title"/>
        </div>
        <div class="media-body">
         
                <h2 class="mb-0">@product.Title</h2>
       
            <p>@product.Description</p>
            <h4 class="price">$@product.Price</h4>
        </div>
    </div>
}


@code {
    private Product? product = null;
    private string message = string.Empty;
    //Essa variavel parameter esta lendo o Id da Url??????????????
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        //nao vamos mais precisar dessa linhas
        // product = ProductService.Products.Find(p => p.Id == Id);

        message = "Loading product ...";
        var result = await ProductService.GetProduct(Id);

        if(!result.Success)
        {
            message = result.Message;
        }

        else
        {
            product = result.Data;
        }
    }

}
